package game.com;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.ScreenUtils;

import static game.com.Main.screens;

public class Game_saved implements Screen {

    private Texture backgroundTexture; // To hold the background image
    private SpriteBatch batch; // To draw the texture
    private Main main; // Reference to the main application
    private float timer; // Timer to track the time elapsed
    private final float displayTime = 2.0f; // Time to display the ops screen

    public Game_saved(Main main) {
        this.main = main;
        backgroundTexture = new Texture(Gdx.files.internal("images/saved_screen.png")); // Load the background image
        batch = new SpriteBatch();
        timer = 0; // Initialize timer
    }

    @Override
    public void show() {
        // Reset the timer when the screen is shown
        timer = 0;
    }

    @Override
    public void render(float delta) {
        timer += delta; // Update the timer with the time passed since the last render

        ScreenUtils.clear(0, 0, 0, 1); // Clear the screen with a black background
        batch.begin();
        batch.draw(backgroundTexture, 0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight()); // Draw the background image
        batch.end();

        // Check if the display time has elapsed
        if (timer >= displayTime) {
            main.setScreen(screens.get("homeScreen")); // Switch back to the home screen
        }
    }

    @Override
    public void resize(int width, int height) {
        // Handle resizing if necessary
    }

    @Override
    public void pause() {}

    @Override
    public void resume() {}

    @Override
    public void hide() {}

    @Override
    public void dispose() {
        // Dispose of the resources to avoid memory leaks
        backgroundTexture.dispose();
        batch.dispose();
    }
}
